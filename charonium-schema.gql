# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Customer {
  customerId: Int!
  customerStatus: CustomerStatus!
  email: String!
  emailStatus: EmailStatus!
  name: String!
  referees: [Customer!]
  referralCode: String
  referralCustomerId: Int
  referrer: Customer
}

enum CustomerRole {
  ADMIN
  MODERATOR
  USER
}

enum CustomerStatus {
  ACTIVE
  INACTIVE
  PENDING
  SUSPENDED
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input EmailInput {
  email: String!
}

enum EmailStatus {
  UNVERIFIED
  VERIFIED
}

type FieldRecord {
  key: String!
  value: String!
}

type Image {
  createdAt: DateTime!
  imageId: Int!
  path: String!
}

type JwtPayload {
  email: String!
  exp: Float
  firstName: String
  iat: Float
  role: CustomerRole!
  sub: Float!
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  forgetPassword(input: EmailInput!): Boolean!
  generatePresignedPost(uploadInput: UploadInput!): PresignedPost!
  generatePresignedUrl(uploadInput: UploadInput!): PresignedUrl!
  generatePresignedUrls(uploadInputs: [UploadInput!]!): [PresignedUrl!]!
  login(input: LoginInput!): String!
  logout: String!
  refreshTokens: String!
  register(input: RegisterInput!): Customer!
  registerAdmin(input: RegisterAdminInput!): Boolean!
  resendAdminRegistrationEmail: Boolean!
  resendEmailVerification(input: EmailInput!): Boolean!
  resetPassword(input: ResetPasswordInput!): Boolean!
  saveUploadedImage(saveImageInput: SaveImageInput!): Image!
  verifyEmail(token: String!): VerifyEmailResult!
}

type PresignedPost {
  fields: [FieldRecord!]!
  url: String!
}

type PresignedUrl {
  key: String!
  presignedUrl: String!
}

type Query {
  getReferralMap(input: ReferralInput!): [ReferralMap!]!
  hello: String!
  protectedAdminMethod: JwtPayload!
  protectedMethod: JwtPayload!
}

type ReferralEntry {
  referees: [Customer!]!
  referrer: Customer!
}

input ReferralInput {
  referrerId: Float!
  startTier: Float
}

type ReferralMap {
  referralEntries: [ReferralEntry!]!
  tier: String!
}

input RegisterAdminInput {
  newName: String!
  newPassword: String!
  token: String!
}

input RegisterInput {
  email: String!
  name: String!
  password: String!
  referralCode: String
}

input ResetPasswordInput {
  newPassword: String!
  token: String!
}

input SaveImageInput {
  path: String!
}

input UploadInput {
  category: String!
  fileExtension: String!
}

type VerifyEmailResult {
  message: String
  success: Boolean
}